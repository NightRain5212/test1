import asyncio
from spark_client import SparkClient
import json
async def test_connection():
    client = SparkClient()
    try:
        # 创建WebSocket连接
        ws_url = client._create_url()
        print(f"生成的URL: {ws_url}")
        
        # 测试一个简单的对话
        response = await client.chat("你好")
        print(f"响应: {response}")
        
    except Exception as e:
        print(f"测试失败: {str(e)}")

def run():
    spark=SparkClient()
    res=spark.chat("今天上海天气怎么样,将结果整理为10个字以内")
    print(res)

def run1():
    tmp={
  "姓名": "李⼩画",
  "手机号": "13066668888",
  "邮箱": "cnsupport@canva.com",
  "性别": "⼥",
  "年龄": 22,
  "意向岗位": "web全栈开发",
  "学历信息": "2015年 - 2019年 华东师范⼤学",
  "专业": "软件⼯程",
  "实习经历": [
    {
      "公司": "可⽡科技公司",
      "职位": "java后端",
      "时间": "2015年9⽉ -2016年11⽉",
      "职责": "负责服务器维护"
    },
    {
      "公司": "可⽡信息公司",
      "职位": "前端开发",
      "时间": "2013年6⽉ - 2015年8⽉",
      "技能": "掌握了前端管理⽹⻚的基本⼯作流程"
    }
  ],
  "学术成就": [
    "第⼗届中国计算机设计⼤赛全国⼆等奖",
    "第五届中国软件杯A组全国⼀等奖",
    "“问⼼”笔记智能体、淘宝商城微信⼩程序、学术论⽂“魔镜”等七个⼤型项⽬"
  ],
  "技能": [
    "熟悉全栈开发流程，具备基础的专业知识",
    "良好的团队协作能⼒",
    "强⼤的⾃主学习能⼒",
    "扩充专业知识",
    "喜欢打篮球、看电影、打游戏"
  ],
  "自我评价": [
    "经验丰富：有丰富的知识体体系做基础，能够按部就班完成任务、查找代码bug",
    "团队合作：善于与他⼈合作，能够在团队中积极贡献并共同实现⽬标",
    "⾃我管理：具备良好的时间管理和⾃我组织能⼒，能够有效管理⼯作任务和⼯作压⼒"
  ]
}
    tmp2={{"questions": ["问题1", "问题2", "问题3", "问题4", "问题5"]}}
    prompt = f"""
    从以下文本中提取关键文字信息:{tmp}。整理为json格式的响应数据。json需包含以下字段:
    "姓名""手机号""邮箱""性别""年龄""意向岗位""学历信息""专业""实习经历""学术成就""技能""自我评价",其中“技能"是指兴趣爱好/特长,"学术成就"是指
    科研成果/竞赛获奖/做过或者参与的项目,如果无法找到"学历信息""性别""年龄""姓名""意向岗位""专业""技能"这几个字段，就只返回空的json数据。
                """
    print(prompt)

if __name__ == "__main__":
    run1()